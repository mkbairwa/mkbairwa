version: '3.8'



services:
  web:
    build: 
      context: .
      dockerfile: ./docker/local/Dockerfile 
    container_name: django-celery-demo
    command: /start
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    # image: postgres:14-alpine
    # container_name: postgres_db
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    # environment:
    #   - POSTGRES_USER=${POSTGRES_USER}
    #   - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #   - POSTGRES_DB=${POSTGRES_DATABASE}
    # ports:
    #   - 5432:5432

    image: mysql:5.7
    container_name: postgres_db
    volumes:
      - mysql_data:/var/lib/mysql/data
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    ports:
      - 3306:3306


  redis:
    image: redis:6-alpine


  celery_worker:
    build: 
      context: .
      dockerfile: ./docker/local/Dockerfile 
    command: /start-celeryworker
    container_name: celery-worker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  celery_beat:
    build: 
      context: .
      dockerfile: ./docker/local/Dockerfile 
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  flower:
    build: 
      context: .
      dockerfile: ./docker/local/Dockerfile 
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - 5555:5555
    depends_on:
      - redis
      - db
      - celery_worker

  # volumes:
  #   postgres_data:

volumes:
  mysql_data:

    
  
